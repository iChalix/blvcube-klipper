# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though other AVR chips are also possible).

# See the example.cfg file for a description of available parameters.

[mcu]
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_95730333637351B0E0E1-if00
#baud: 115000
#pin_map: arduino

# The "zboard" micro-controller will be used to control the Z axis.
[mcu zboard]
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_957303336373515032C1-if00
#baud: 115000
#pin_map: arduino

# The "auxboard" micro-controller will be used to control the heaters.
[mcu auxboard]
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0042_55838323735351704112-if00
#baud: 115000
#pin_map: arduino

# Arduino aliases for atmega2560/1280 (Arduino mega) boards
[board_pins arduino-mega]
mcu: mcu, zboard, auxboard
aliases:
    ar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,
    ar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,
    ar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,
    ar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,
    ar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,
    ar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,
    ar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,
    ar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,
    ar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,
    ar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,
    ar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,
    ar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,
    ar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,
    ar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,
    analog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,
    analog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,
    analog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,
    analog15=PK7,
    # Marlin adds these additional aliases
    ml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,
    ml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,
    ml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,
    ml85=PH7

[bed_screws]
screw1: 30,30
screw2: 270,30
screw3: 270,30
screw4: 270,270

[tmc2130 stepper_x]
cs_pin: ar53
run_current: 0.7
driver_SGT: 3
diag1_pin: ^!ar3
#driver_HEND: 5
#driver_HSTRT: 2

[stepper_x]
microsteps: 16
step_pin: ar54
dir_pin: !ar55
enable_pin: !ar38
#step_distance: .005
rotation_distance: 32
full_steps_per_rotation: 400
endstop_pin: tmc2130_stepper_x:virtual_endstop
position_min: 0
position_endstop: 0
position_max: 310
homing_speed: 40
homing_retract_dist: 0

[tmc2130 stepper_y]
cs_pin: ar49
run_current: 0.7
driver_SGT: 3
diag1_pin: ^!ar2
#driver_HEND: 5
#driver_HSTRT: 2

[stepper_y]
microsteps: 16
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
#step_distance: .005
rotation_distance: 32
full_steps_per_rotation: 400
endstop_pin: tmc2130_stepper_y:virtual_endstop
position_endstop: -18
position_min: -18
position_max: 310
homing_speed: 40
homing_retract_dist: 0

[tmc2130 stepper_z]
cs_pin: zboard:ar49
run_current: .85
hold_current: .4
stealthchop_threshold: 5000
driver_PWM_GRAD: 10

[stepper_z]
microsteps: 16
step_pin: zboard:ar60
dir_pin: !zboard:ar61
enable_pin: !zboard:ar56
rotation_distance: 1.5
endstop_pin: zboard:ar14
position_endstop: 5.05
position_max: 665
position_min: -1

[tmc2130 stepper_z1]
cs_pin: zboard:ar53
run_current: .85
hold_current: .4
stealthchop_threshold: 5000
driver_PWM_GRAD: 10

[stepper_z1]
microsteps: 16
step_pin: zboard:ar54
dir_pin: !zboard:ar55
enable_pin: !zboard:ar38
rotation_distance: 1.5
endstop_pin: zboard:ar3

[thermistor my_NTC3950xx]
temperature1: 25
resistance1: 100000
temperature2: 180
resistance2: 770
#resistance2: 582
temperature3: 250
resistance3: 185
#resistance3: 230

[thermistor my_NTC3950]
temperature1: 25
resistance1: 100000
temperature2: 150
resistance2: 1791
temperature3: 250
resistance3: 283

[tmc2130 extruder]
cs_pin: auxboard:ar53
run_current: .5

[extruder]
microsteps: 16
step_pin: auxboard:ar26
dir_pin: auxboard:ar28
enable_pin: !auxboard:ar24
#step_distance: .002431674
rotation_distance: 7.78
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: auxboard:ar9
sensor_type: my_NTC3950
sensor_pin: auxboard:analog13
#control: pid
#pid_Kp=27.783 
#pid_Ki=1.639 
#pid_Kd=117.774
min_temp: 0
max_temp: 270
min_extrude_temp: 180
pressure_advance: 0.05
max_extrude_only_distance: 150

[heater_bed]
heater_pin: auxboard:ar8
#sensor_type: EPCOS 100K B57560G104F
sensor_type: my_NTC3950
sensor_pin: auxboard:analog14
control: pid
pid_Kp=65.655 
pid_Ki=0.740 
pid_Kd=1455.640
min_temp: 0
max_temp: 120

[probe]
pin: !zboard:ar18
#   Probe detection pin. This parameter must be provided.
x_offset: 30.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: -3.5
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#z_offset: 1.58
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.

[verify_heater heater_bed]
check_gain_time=120

[fan]
pin: auxboard:ar10

[heater_fan extruder_fan]
heater_temp: 50.0
pin: zboard:ar8
max_power: 1.0
hardware_pwm: True

[temperature_fan xy_stepper_fan]
pin: ar44
max_power: 1.0
hardware_pwm: True
sensor_type: my_NTC3950
sensor_pin: analog13
min_temp: 0
max_temp: 120
target_temp: 50.0
max_speed: 0.4
min_speed: 0.2
control: watermark

[temperature_fan z_stepper_fan]
pin: zboard:ar44
max_power: 1.0
hardware_pwm: True
sensor_type: my_NTC3950
sensor_pin: zboard:analog15
min_temp: 0
max_temp: 120
target_temp: 50.0
max_speed: 0.4
min_speed: 0.2
control: watermark

[temperature_fan auxboard_stepper_fan]
pin: auxboard:ar44
max_power: 1.0
hardware_pwm: True
sensor_type: my_NTC3950
sensor_pin: auxboard:analog15
min_temp: 0
max_temp: 120
target_temp: 50.0
max_speed: 0.4
min_speed: 0.2
control: watermark

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 2000
max_z_velocity: 5
max_z_accel: 30

[bed_mesh]
speed: 80 
mesh_min: 30,30
mesh_max: 250,250
probe_count: 5,5

[output_pin leds]
pin: auxboard:ar42

[input_shaper]
shaper_freq_x: 41.667  # frequency for the X mark of the test model
shaper_freq_y: 35.714  # frequency for the Y mark of the test model
shaper_type: mzv

[homing_override]
gcode:
 G1 Z+20
 G28 X Y
 G28 Z0
axes: z
#   The axes to override. For example, if this is set to "z" then the
#   override script will only be run when the z axis is homed (eg, via
#   a "G28" or "G28 Z0" command). Note, the override script should
#   still home all axes. The default is "xyz" which causes the
#   override script to be run in place of all G28 commands.
set_position_z: 10

[gcode_macro START]
gcode:
   CLEAR_PAUSE
   BED_MESH_CLEAR
   G28 ; home all axes
   BED_MESH_CALIBRATE
   G1 Z5 F300 ; lift
   G1 X10 Y5 F5000 ; move to prime
#   G1 Z0.2 F300 ; get ready to prime
#   G92 E0 ; reset extrusion distance
#   G1 X80 E10 F600 ; prime nozzle
#   G1 X80 F5000 ; quick wipe

[gcode_macro STOP]
gcode:
   M104 S0 ; turn off extruder
   M140 S0 ; turn off bed
   M107 S0 ; turn off fan
   ;Retract the filament
   G92 E1
   G1 E-1 F300
   G1 X0 Y300 F2000 ; prepare for part removal
   M84 ; disable motors
   BED_MESH_CLEAR

[gcode_macro M600]
#default_parameter_X: 50
#default_parameter_Y: 0
#default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#fluidd macros
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#End fluidd macros

#macros
[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91 ;relative positioning
  M117 Heating...
  M109 S{params.TEMP|default(215, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  ;M117 Unloading filament...
  G0 E-5 F3600        ;extract filament to cold end area 
  G4 P3000            ;wait for three seconds
  G0 E5 F3600         ;push back the filament to smash any stringing 
  G0 E-15 F3600       ;Extract back fast in the cold zone 
  G0 E-130 F300       ;Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  ;M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91 ;relative positioning
  ;M117 Heating...
  M109 S{params.TEMP|default(215, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  ;M117 Loading filament...
  G0 E100 F600 ; Load the filament into the hotend area.
  G4 P1000
  G0 E40 F100 ; Purge
  M400
  TURN_OFF_HEATERS
  ;M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro PRIME_LINE]
gcode:
  M109 S210; wait for extruder to heat up
  G1 Z5 F3000 ; lift
  G1 X5 Y10 F12000 ; move to prime
  G1 Z0.3 F3000 ; get ready to prime
  G92 E0 ; reset extrusion distance
  G1 Y80 E16 F1200 ; prime nozzle
  G1 Y100 F15000 ; quick wipe

[gcode_macro z_tilt]
gcode:
  Z_TILT_ADJUST


[gcode_macro START_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=start_print_state
  G21 ;metric values
  G90 ;absolute positioning
  M82 ;set extruder to absolute mode
  G28 ;home
  ;M117 Heating...
  M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }; wait for bed to heat up
  ;M109 S150 ; Wait for extruder to reach 150 so an inductive probe (if present) is at a predictable temp. Also allows the bed heat to spread a little.
  ;Z_TILT_ADJUST ;Adjust bed tilt
  ;G28 Z ;Home again as Z will have changed after tilt adjustment and bed heating.
  BED_MESH_CALIBRATE ; Calibrate bed mesh
  G0 X10 Y310 Z10 F6000 ; Park in the back and wait for extruder
  M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }; wait for extruder to heat up
  ;M117 Printing...
  RESTORE_GCODE_STATE NAME=start_print_state

# The end_print macro is also called from CANCEL_PRINT.
[gcode_macro END_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=end_print_state
  M104 S0 ;extruder heater off
  M140 S0 ;heated bed heater off
  G91 ;relative positioning
  G1 Z10 E-2 F3600  ;retract the filament a bit before lifting the nozzle.
  G1 E-2 F3600 ;retract filament even more
  G90 ;absolute positioning
  G0 X10 Y310 ; Park in the back
  M84 ;steppers off
  M107 ; part cooling fan off
  ;M117 Done.
  RESTORE_GCODE_STATE NAME=end_print_state

[delayed_gcode _Startup]
# execute when the delay duration has elapsed.
initial_duration: 1.0    #   If set to 0 the delayed_gcode will not execute on startup Default is 0.
gcode:
  LEDS_AN
  
[gcode_macro LEDS_AN]
gcode:
  SAVE_GCODE_STATE NAME=leds_on_state
  SET_PIN PIN=leds VALUE=1
  RESTORE_GCODE_STATE NAME=leds_on_state

[gcode_macro LEDS_AUS]
gcode:
  SAVE_GCODE_STATE NAME=leds_off_state
  SET_PIN PIN=leds VALUE=0
  RESTORE_GCODE_STATE NAME=leds_off_state

[gcode_macro PROBE_TEST]
gcode:
  G91
  G1 z10 F600
  G90
  PROBE
  G91
  G1 z10 F600
  G90
  PROBE
  G91
  G1 z10 F600
  G90
  PROBE
  

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated, and to
#   unretract when G11 is activated (but see unretract_extra_length below).
#   The default is 0 mm.
retract_speed: 50
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when unretracting.
unretract_speed: 50
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_arcs]
resolution: 1.0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 0.425
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.805
#*# pid_ki = 1.300
#*# pid_kd = 108.949
